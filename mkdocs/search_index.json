{
    "docs": [
        {
            "location": "/", 
            "text": "Welcome to Sensel Documentation\n\n\nThis site provides reference documentation for Sensel hardware and software. Use the \"hamburger\" menu or the left-side nav to access documentation for the different products.\n\n\nProducts\n\n\n\n\nMorph\n\n\nMorph API\n\n\n\n\nGit Hub\n\n\nThis documentation source is hosted on our \ngithub site\n. If you spot an error or room for improvement, feel free to clone the repo, make your changes, and \nmake a pull request\n or just simply \nlog an issue", 
            "title": "Home"
        }, 
        {
            "location": "/#welcome-to-sensel-documentation", 
            "text": "This site provides reference documentation for Sensel hardware and software. Use the \"hamburger\" menu or the left-side nav to access documentation for the different products.", 
            "title": "Welcome to Sensel Documentation"
        }, 
        {
            "location": "/#products", 
            "text": "Morph  Morph API", 
            "title": "Products"
        }, 
        {
            "location": "/#git-hub", 
            "text": "This documentation source is hosted on our  github site . If you spot an error or room for improvement, feel free to clone the repo, make your changes, and  make a pull request  or just simply  log an issue", 
            "title": "Git Hub"
        }, 
        {
            "location": "/morph/", 
            "text": "Welcome\n\n\nThis documentation explains the Sensel Morph hardware, features, software, and, most importantly, how to use it. These docs are maintained in its own \ngithub repo\n. If you have a suggestion, correction, or improvement, you can clone this repo and \nmake a pull request\n or \nlog an issue\n.\n\n\nOverview - What is Morph?\n\n\nThe Sensel Morph is a reconfigurable control surface for artists, musicians, coders, and creative people of all stripes. It can work using Bluetooth 4.0LE or USB connections.\n\n\nFeatures\n\n\nHighly Sensitive\n:\n\n\n\n\nApprox. 20,000 pressure sensors 5g - 5kg sensing range per touch (32,000 levels)\n\n\n\n\nExtremely Fast\n:\n\n\n\n\nFull Resolution Mode: 125 Hz (8 ms latency)\n\n\nHigh Speed Mode: 500 Hz (2 ms latency)\n\n\n\n\nPrecise Tracking\n:\n\n\n\n\n6502 dpi\n\n\n\n\nVersatile Connectivity\n\n\n\n\nBluetooth LE, USB, Serial (enabled with Innovator's Kit)\n\n\n\n\nOn-the-Go Power\n\n\n\n\nUSB, Rechargeable Battery\n\n\n\n\nWhat's in the box\n\n\n\n\n\n\nMorph\n\n\n3ft. USB Micro Cable\n\n\nCarrying case\n\n\nOverlays\n1\n\n\nQuickstart guide\n\n\nFCC and CE compliance statement\n\n\n\n\n1\n - Overlays received in your box depend on overlays ordered.\n\n\nSupported Operating systems\n\n\n\n\n\n\n\n\nOperating system\n\n\nUSB MIDI\n\n\nBluetooth LE MIDI\n\n\nSenselApp\n\n\n\n\n\n\n\n\n\n\nOS X 10.10 +\n\n\nYes\n\n\nYes\n\n\nYes\n\n\n\n\n\n\nmacOS 10.12 +\n\n\nYes\n\n\nYes\n\n\nYes\n\n\n\n\n\n\nWindows XP, 7, and 8\n\n\nYes\n\n\nYes\n\n\nYes\n\n\n\n\n\n\nWindows 10 Anniversary Edition\n\n\nYes\n\n\nYes\n\n\nYes\n\n\n\n\n\n\nUbuntu/Debian-based Linux\n1\n\n\nYes\n\n\nSoon\n\n\nNo\n\n\n\n\n\n\nAndroid\n\n\nYes\n\n\nYes\n2\n\n\nNo\n\n\n\n\n\n\niOS\n\n\nYes\n\n\nYes\n\n\nNo\n\n\n\n\n\n\n\n\n1\n - Many linux distributions will support USB MIDI. Only distributions that use the \nbluesz\n stack will support BLE MIDI.\n\n\n2\n - Supported in Android Marshmallow and up\n\n\nQuick Start\n\n\nThis guide will get your Morph out of the box and working with your computer or mobile device.\n\n\n1 Download Software\n\n\nDownload the SenselApp mapping and configuration application from \nthe Sensel website.\n This is not only a great tool for getting the most out of your Morph, but essential for updating its firmware.\n\n\n2 USB connection\n\n\n\n\nRemove the Morph and the supplied USB Micro cable from the box.\n\n\nConnect the Morph to your Windows or MacOS computer with the USB cable.\n\n\nThe Morph will power up and automatically connect to your operating system.\n\n\n\n\n3 Update Firmware\n\n\nMake sure you have a reliable internet connection and launch the Morph Dashboard on your computer with the Morph connected. The application will query our servers and find if there is a firmware update available. If there is, update your firmware and continue.\n\n\n4 Launch the Visualizer\n\n\nThe Visualizer is the easiest way to see activity on your Morph and confirm the hardware is communicating with your computer.\n\n\n\n\nBluetooth connection\n\n\nThe Sensel Morph is a Bluetooth 4.0 LE wireless device. This means it can function as a wireless controller for your music, drawing, or writing.\nThis section describes how to pair and un-pair your Morph to a bluetooth connection on a number of operating systems. Once the Morph is paired to your device, it will automatically connect when in range.\n\n\nPairing mode\n\n\nIn general, the process is as follows. Screen images for different operating systems are below.\n\n\n\n\nUnplug the Morph from any USB computer connection (power connection is OK).\n\n\nOpen the bluetooth control panel for your computer.\n\n\nHold the button down for about four seconds, or until the LED turns blue.\n\n\nClick the \"pair\" button in your computer's control panel.\n\n\nThe Morph will be paired to your device.\n\n\n\n\nUnpairing\n\n\nIf you want to pair the Morph to a different device, you'll need to unpair it from any current connection.\nThe best way to do this is to turn Bluetooth off on the device the Morph is currently connected to. Now, make sure Bluetooth is on for the different device, then go through the pairing process.\n\n\nSwap Pairing\n\n\nNow that the Morph has been paired to two different devices, it's very easy to swap connections.\nSimply double-click the button on the Morph and it disconnect from your current device, then will connect to the other device.\n\n\n(TKTK - \nthere is still a bit of mystery here\n )\n\n\nOS Specific Pairing Guides\n\n\nOSX\n\n\nOpen System Preferences and click the Bluetooth icon.\nPut the Morph into pairing mode. The control panel will look like:\n\n\n\n\nClick the \"pair\" button on screen. Your Morph is now paired:\n\n\n\n\nWindows\n\n\nOpen the Settings panel for Bluetooth. The easy to get there is to use the Windows search bar:\n\n\n\n\niOS\n\n\nOpen Settings and select Bluetooth. Put the Morph into pairing mode. Select Morph in the available devices and pair.\n\n\n\n\nOnce you have paired with the Morph, you will be able to use it with the different overlays. Here are some sample screen captures of how it shows up  in different apps:\n\n\n\n\nAndroid\n\n\nPut the Morph into pairing mode. In Android's Settings app, select Bluetooth, select \"Morph\" from the available devices and pair:\n\n\n\n\nOnce paired, you can use the Morph. If you are using the QWERTY overlay, you'll probably want to setup your keyboard so you can easily switch between on-screen and Morph. Use the keyboard icon on the bottom of your screen:\n\n\n\n\nLinux\n\n\nThere are many flavors of Linux. We are documenting one of the most common, Ubuntu 16.04. Open the Settings panel and select the Bluetooth panel\n\n\n\n\nIn the lower left of the \"Devices\" panel, click the \"\n+\n\" button to search and add the Morph.\n\n\n\n\nMost Linux relies on the bluez bluetooth stack. You can also use the command line tools to pair. Once you run the \nbluetoothctl devices\n command, you'll be in the bluetoothclt interactive shell:\n\n\n bluetoothctl devices\n[NEW] Controller 00:15:83:3D:0A:57 sensoruser [default]\n[NEW] Device 71:11:32:B0:12:A0 Morph-0194\n[bluetooth]# pair 71:11:32:B0:12:A0\n[bluetooth]# pair 71:11:32:B0:12:A0\n[bluetooth]# connect 71:11:32:B0:12:A0\n[bluetooth]# trust 71:11:32:B0:12:A0\n\n\n\n\nIf you want to disconnect, you can \n\n\nbluetoothctl remove 71:11:32:B0:12:A0\n\n\n\n\nUpdate bluesz\n\n\nIf you want to update to the latest bluez software, you can get the link from the \nbluez site\n. At the time of writing, the current version is 5.44. This has some support for Bluetooth MIDI:\n\n\nsudo apt-get update\nsudo apt-get install -y libusb-dev libdbus-1-dev libglib2.0-dev libudev-dev libical-dev \ncd ~/Downloads\nwget http://www.kernel.org/pub/linux/bluetooth/bluez-5.44.tar.xz\ntar xvf bluez-5.44.tar.xz\ncd bluez-5.44\n./configure\nmake\nsudo make install\n\n\n\n\nWhile we can't explicitly support all Linux, this should at least get you started. \n\n\nBluetooth MIDI configuration\n\n\nIf your operating system supports MIDI over Bluetooth, you can have a wireless MIDI controller.\n\n\nOSX\n\n\n\n\nOpen the AudioMIDI application in macOS. Open the MIDI Studio window (cmd-2) and double-click the Bluetooth logo. If you have successfully \npaired the Morph with Bluetooth\n, you'll see your device listed here. Press \"connect\" and the Morph will be available to any MIDI applications as an input device.\n\n\nWindows\n\n\nWindows 10 Anniversary Edition and after support Bluetooth MIDI, so make sure you have the latest update. This support, however, is limited to applications that use the native windows API for MIDI (read more details \nhere\n). As a result, for common use, you'll need a couple additional pieces of software:\n\n\n\n\nMIDIberry\n\n\nloopMIDI\n\n\n\n\nThe loopMIDI application creates virtual (or \nloopback\n) MIDI ports. MIDI berry provides a connection between the Morph's Bluetooth MIDI ports and the virtual MIDI ports. In your music application, you connect to the virtual port created in loopMIDI. Screenshot examples below show loopMIDI with the virtual port, MIDIberry with the connection made, and a couple of applications using the vitrual port to get MIDI input from the Morph.\n\n\n\n\n\n\nvirtual port \"MorphMIDI Port\" created in loopMIDI (type in the field, then click \"+\")\n\n\n\n\n\n\n\nconnection between Morph bluetooth and \"MorphMIDI Port\" made in MIDIberry (just tap on an input port and an output port to connect them)\n\n\n\n\n\n\n\nvirtual port \"MorphMIDI Port\" selected in the MIDI setup prefs of Bitwig Studio\n\n\n\n\n\n\n\nvirtual port \"MorphMIDI Port\" selected in the MIDI setup prefs of FL Studio\n\n\n\n\n\n\n\niOS\n\n\niOS version 8 and above support Bluetooth MIDI. These devices have Bluetooth LE support:\n\n\n\n\niPhone 4s +\n\n\niPad3 +\n\n\niPad Mini +\n\n\n\n\nOnce the Morph is paired with the iOS device, it's available as a MIDI device to most iOS MIDI-capable apps. You'll need to go into an app's preferences or setup panel to enable and configure MIDI control. \n\n\nIn some cases, you may need the \nmidimittr app\n to create a connection with the Morph which will expose the Morph's MIDI input to other apps.\n\n\nAndroid\n\n\nAndroid version \nMarshmallow (6) and above\n support BLE MIDI. However, some devices support this connection type, and some don't. The best way to find out is to pair your device with the Morph via Bluetooth, then use the free \nMIDI BLE Connect\n app from the Google Play store. Open it after paring the Morph to your Android device. If there is a connection to be found, MIDI BLE Connect will scan and find it.\n\n\nTKTK - I have yet to confirm MIDI BLE on Android. I know it's possible, just haven't seen it.\n\n\nLinux\n\n\nBLE MIDI has some support in the latest \nbluesz\n stack, and should have more complete support in future updates according to \nthis blog\n. You are welcome to experiment! Instructions for updating to the most recently release of bluesz are \nabove\n.\n\n\nHardware\n\n\nThe Sensel Morph is a fairly simple piece of hardware. It consists of a flat rectangular area of force-sensing circuitry, a slightly raised area that contains additional processing circuitry, LEDs, a button, and micro USB connector.\n\n\nFeatures\n\n\n\n\nLEDS\n\n\nStrip\n\n\nThere is a strip of 24 white LEDs. These light up when areas are pressed on the overlays, and can be controlled with the API.\n\n\nStatus RGB\n\n\nThis LED can be different colors indicating different things. The different colors and blink patterns are:\n\n\n\n\nWhite\n: Communication is happening to the device over USB\n\n\nBlue stable\n: The device is in bluetooth mode\n\n\nBlue pulsing\n: The device is in bluetooth pairing mode\n\n\nYellow\n: The device is in update mode (this means you should open the Sensel App and update the firmware on your device)\n\n\nPurple\n: The device is communicating through the hacker cable (you won't see this unless you're using the hacker cable from the Innovator\u2019s Kit)\n\n\nRed\n: Indicates a low battery or powering off device. To turn off the Morph, press and hold the power button for 5 seconds. After 2 seconds the red LED will turn on. Wait until the LED turns off before releasing the power button.\n\n\n\n\nButton\n\n\nUse to power device on/off and put in Bluetooth pairing mode.\n\n\n\n\nPress to turn on\n\n\nHold for a few seconds to put in pairing mode (blue LED)\n\n\nHold for a few seconds to turn off (wait for red LED to go off)\n\n\nDouble click to disconnect from current device and put Morph in pairing mode\n\n\n\n\nUSB Connector\n\n\nA single USB micro connector for charging the battery and providing a serial connection.\n\n\nBluetooth Transmitter\n\n\nThe Morph can seamlessly switch between Bluetooth and wired operation. \nRead on\n for details on connecting to your device with Bluetooth\n\n\nForce Sensor Surface\n\n\nWithout an overlay, the Force Sensor Surface is mostly a black slab of nothing! However, you can get some life from it using the Visualizer in the SenselApp. It is no more or less durable than the rest of the case.\n\n\nBattery Life\n\n\nThe Morph has a built-in rechargeable 3.7 Volt Lithium Polymer battery rated at 420 mAh amp-hours. Under normal usage, you can expect six to eight hours of use from a fully charged battery.\n\n\nCare and Feeding\n\n\nThe overlays are made of silicone rubber with a silicone top-coating for a smooth feel. You can clean them with warm water and soap. While we have tested a variety of substances to ensure quality, it is known that some sunscreens and lotions can be contaminants on plastics. So, to ensure longest life for your overlays, keep your hands clean. Additionally, silicone is susceptible to tears. Once torn, it's difficult to stop. Use the handy case we provide to keep your overlays away from loose change, hairpins, keys, or other sharp items!\n\n\nThe LiPo battery's charge is handled by the Morph's internal electronics. However, a general rule-of-thumb for LiPo batteries is that they should not be stored at full charge. If you will not be using the Morph for a while, turn it on and let it charge down.\n\n\nThe black surface of the pressure sensor is PET (Polyethylene Terephthalate) plastic. This is a common and strong plastic. \n\n\nDimensions\n\n\n\n\nThickness measurements are with the rubber feet. Subtract 0.75 mm for thickness measurements without feet.\n\n\nMorph Dashboard Software\n\n\nThe Morph Dashboard is used to flash firmware, configure, calibrate, and confirm the functions of the Morph. You can download the software for Windows or macOS from the \nSensel website\n.\n\n\nIn order to use any of the features in the Morph Dashboard, you'll need to have a wired connection between your Morph and computer. A wireless connection is not sufficient for working with the Dashboard.\n\n\nHome\n\n\nThe home page of the Morph Dashboard allows you to select a task. You can edit the output of overlays, update firmware, and visualize the raw data from pressure input on the Morph.\n\n\n\n\nOverlay Mapper\n\n\nMusic Overlays\n\n\n\n\nThe Production, Drum, and Piano overlays can be completely modified from their default settings, so they work exactly the way you want. When you select a music overlay from the Dashboard, you'll open a screen where you can click on the different buttons or regions to modify the MIDI notes sent from the pads. Use the inspector's menu to select a different note value for each pad you want to change. You can save the settings to a map preset. When finished editing, be sure to click \"Send Map to Morph\" to modify the settings.\n\n\nQWERTY Overlay\n\n\n\n\nIn one way, the mapper for the QWERTY overlay is very similar to the music editors. However, instead of modifying MIDI notes, you are modifying the key event codes from each stroke. A list of keyboard codes can be found at \nthis link.\n\nMore importantly, the QWERTY Overlay mapper allows you to set the operating system preference, which impacts how the control, option, command, and function keys will behave on the overlay. Use the menu to set your preference and click \"Send to Morph\".\n\n\nVisualizer\n\n\nUse the Visualizer to view the raw pressure information coming from the Morph's sensor. The visualizer is more than entertaining, it's a look behind the scenes of what happens when you are using the Morph. You can see the effects of using different materials between a stylus (or some other actuator, like a finger) and pressure surface. You can also get a good impression of the dynamic range and sensitivity of the sensor. The curious and creative user will find great satisfaction in the Visualizer!\n\n\nOverlays\n\n\nQWERTY\n\n\n\n\nTHe QWERTY Overlay works like a regular QWERTY keyboard. It's a nice option for using the Morph as a keyboard for a tablet or remote computer. You will need to configure for your Operating System using the Morph Dashboard.\n\n\nPiano\n\n\n\n\nThe Piano overlay sends MIDI data on Channel 1 from the Morph to your device so you can play software synths and samplers. By default, the Piano sends notes on MIDI channel 1 and the default octave starts at note 36 (C3). You can transpose up and down two octaves with the arrow keys. Additionally, you can create vibrato by moving your fingers side-to-side, bending the note.\n\n\nThe play, stop, and record buttons send MIDI Machine Control (MMC) commands to enable those features. Some software products, such as Ableton Live, do not recognize MMC, so they will seem to not work in those cases.\n\n\nDrums\n\n\n\n\nThe Drum overlay sends notes on MIDI Channel 10. The Default notes start at 36 (C3). The arrow keys transpose all notes up or down 16 semitones to better work with many software drum machines, which work in banks of 16 notes.\n\n\nThe play, stop, and record buttons send MIDI Machine Control (MMC) commands to enable those features. Some software products, such as Ableton Live, do not recognize MMC, so they will seem to not work in those cases.\n\n\nProducer\n\n\n\n\nThe 16 Pad grid sends on MIDI Channel 2, the controls send on MIDI Channel 2, the \"piano keys\" send on MIDI Channel 3.\n\n\nThe play, stop, and record buttons send MIDI Machine Control (MMC) commands to enable those features. Some software products, such as Ableton Live, do not recognize MMC, so they will seem to not work in those cases.\n\n\nGaming\n\n\n\n\nThe Gaming overlay is used for playing games.\n\n\nMedia\n\n\nThe Media overlay is used for editing video and sound.\n\n\nArt\n\n\n\n\nUse the Art overlay as a high-resolution drawing interface to capture the finest strokes with a variety of brushes and stylii.\n\n\nInnovator\n\n\n\n\nYour turn to make an overlay! The Innovator kit works with the API.\n\n\nUse it!\n\n\nAs the name implies, there are a lot of different ways to use the high-resolution sensor that is the Morph. What follows in this section are the nuts and bolts on getting your morph working with your device and making use of the different overlays in different softwares.\n\n\nTest it!\n\n\nBecause the Morph is capable of so many different modes and protocols, you may need some reassurance and ways of testing. Here's some tools and suggestions for some of the different modes.\n\n\nMIDI\n\n\nIf you are unsure that your Morph is properly connected and providing MIDI input to your computer, you can test with some simple programs. If you don't know what MIDI is, it's a simple serial protocol that electronic music hardware and software uses to interoperate. Learn more \nat wikipedia\n.\n\n\nOS X\n\n\n\n\nMIDI Monitor\n\n\n\n\nWindows\n\n\n\n\nMIDIberry\n\n\n\n\nBluetooth MIDI is available on Windows 10 Anniversary Edition, so make sure your version of Windows 10 is recently updated. It is limited to apps that use the native Windows MIDI implementation, so it probably won't show up as a MIDI input in most software.\n\n\nMIDIberry provides native MIDI hooks to Windows 10, so it can connect to the USB MIDI and the Bluetooth MIDI ports created by the Morph. MIDIberry provides a monitor function that makes it easy to confirm MIDI data input from the Morph.\n\n\niOS\n\n\n\n\nMIDI Wrench\n\n\n\n\nAndroid\n\n\n\n\nUSB MIDI Monitor\n\n\n\n\nLinux\n\n\n\n\namidi\n\n\nothers\n\n\n\n\nIf you want a GUI monitor, you can find something in the \"others\" link above. \nThe easiest way to test on Linux is to use ALSA's \namidi\n in a terminal. Plug in the Morph to your computer's USB port, then list the MIDI devices with: \n\n\namidi -l\n\n\n\n\nYou'll get something like \n\n\nDir Device      Name\nIO  hw:1,0,0    Sensel Morph MIDI 1\n\n\n\n\nArmed with the portname, you can now start dumping MIDI input to the terminal:\n\n\namidi -d -p hw:1,0,0\n\n\n\n\nQWERTY\n\n\nOpen text editor or word processing program. Try typing. Use command and option keys. Everything work? If not, you'll need to either check your connection, or use the Morph Dashboard to make sure your QWERTY overlay is configured for your OS.\n\n\nMusic Software Guides\n\n\nFor the most part, when the Morph is used as a MIDI device, it shows up like any other MIDI keyboard or controller. However, there are some details worth documenting, since, with default mappings, each overlay sends on a different channel. Before you proceed make sure you have a wired or wireless connection between your device and the Morph.\n\n\nThe below screenshots show the Morph used as a Bluetooth MIDI device, but the general instructions do not change for the wired case or for different operating systems.\n\n\nAbleton Live\n\n\n\n\nOpen the Preferences window in Ableton Live and select the MIDI tab. If you just want to play the keyboard and drums, turn \"Track\" on for the input port. If you want to use controls and buttons for parameters and switches in Live, turn \"Remote\" on for the input port. At this time, there is no MIDI control of the Morph, so there is no need to activate \"Track\" or \"Remote\" for output.\n\n\nIn Ableton Live, you can filter MIDI input on tracks according to Channel. You may want to do this to ensure different overlays are dedicated to different tracks.\n\n\nBitwig Studio\n\n\n\n\nOpen the Preferences window in Bitwig Studio and select the Settings, then Controllers tabs. Select \"Generic\" (though the Morph is anything but generic!), then choose either \"MIDI Keyboard\" or \"Keyboard + 8 Device Knobs\".\n\n\nThe \nMIDI Keyboard\n option makes it easy to play notes in any of the instruments. If you want to map the extra CC controls of the Producer overlay to different parameters in Bitwig, you can use Bitwig's MIDI learn feature in the Mappings Browser Panel.\n\n\nThe \nKeyboard + 8 Device Knobs\n will make the Producer overlay nicer to work with. You can use the Morph Dashboard to remap the knobs to CC values 20-27, and Bitwig will automatically map the eight knobs to the currently selected Device Macros.\n\n\nIn this setup, both options have been added as Controllers, though only one is active.\n\n\n\nNote that it is not possible to filter MIDI Channels in Bitwig tracks. If you want to do more advanced filtering and controls, you can use Bitwig's Controller Scripting API and create a control script.\n\n\nFL Studio\n\n\nFL Studio is Windows-only, with a macOS alpha in the works.\n\n\n\n\nOpen the MIDI Settings window from the Options menu.\n\n\nSelect the Morph in the input panel. \n\n\nClick \"enable\" below the Input panel. Select a controller type \"(generic controller)\" from the menu.\n\n\nThis enables basic MIDI input for the Morph. You can get more info on using MIDI in FL Studio 12 from their documentation.\n\n\nCycling 74 Max\n\n\n\n\nMax will use any active MIDI device as an input. How you program your patch will affect what happens. The above screenshot illustrates the MIDI input selection menu that appears from double clicking on the MIDI input objects (midiin, ctlin, notein, pgmin, etc.).\n\n\nApple Logic Pro X, Garage Band, and Main Stage\n\n\n\n\nWith Apple music applications, \"it just works\" is the general idea. If it shows up in AudioMIDI Setup, it will provide input to recording-armed tracks to play software synths, samplers, and drums.\n\n\nIf you want to add more controls for effects and synths, you can use Logic's \"Learn Controls\" features.\n\n\n\n\nYou may need to edit some values in the Expert View, since sometimes Logic will guess incorrectly about the format of incoming data. The procedure is similar for Main Stage.\n\n\nGarage Band offers no remote control of parameters from MIDI devices. You can only play instruments with note and pitchbend input.\n\n\nPresonus StudioOne 2\n\n\n\n\nOpen the Presonus preferences panel and select the \nExternal Devices\n tab. Press the \n\"Add...\"\n button to add a new MIDI controller.\n\n\n\n\nIn the resulting \nEdit Device\n panel, you can add \"Sensel\" to the Manufacturer field and \"Morph\" to \"Device Name\" field. Press the \nAll\n button to receive MIDI on all channels. Select the Morph in the \"Receive From\" menu (there is no need to select the Morph in the Send To menu, since there is currently no MIDI control of the Morph).\n\n\nEngage \"Split Channels\" if you would like to create a separate Instrument Track input for each MIDI channel from the Keyboard. You will probably want to enable Split Channels as pictured, since each overlay sends on a different MIDI channel.\n\n\nYou can choose to use this Keyboard as your \"Default Instrument Input\" by checking the appropriate box. If you are using only one Keyboard with Studio One, you should check this box.\n\n\nPropellerheads Reason\n\n\nReason has several ways of using a MIDI keyboard or controller. The most basic is to just add the Morph as a keyboard.\n\n\n\n\nOpen Reason's Preferences panel, and select the \nControl Surfaces\n tab. Click the \nAdd\n button, and select the \"\n\" from the \nManufacturer\n menu and \"MIDI Control Keyboard\" from the \nModel\n menu. You can type \"Sensel Morph\" into the \nName\n field. Finally, select the Morph from the \nMIDI Input\n menu.\n\n\n\n\nAfter you have set that up, you can make a more sophisticated setup to filter channels\n\n\n\n\nSelect the \"Sync\" tab and add the Sensel Morph to at least one of the External Control Buses, as pictured above.\n\n\n\n\nNow you can use the Hardware device in the Reason Rack and click the \nADVANCED MIDI\n button to expose the selectors. It is here that you can map MIDI channels (and thereby different overlays) from the Morph to different devcies in your rack.\n\n\nOther Programs\n\n\nThese programs are worth investigating, since they are popular.\n\n\nArdour (linux)\n\n\nHydrogen (linux)\n\n\nReaper\n\n\nProTools\n\n\nKontakt\n\n\nMassive\n\n\nMaschine\n\n\nAlthough Maschine comes with its own hardware for sequencing and playing drums, you may want to use the highly-sensitive and playable surface of the Morph to play the extensive soundbanks and effects in the Maschine software.\n\n\nStandalone\n\n\nVST\n\n\nTraktor\n\n\nYou can use the reliable Morph to trigger samples and control effects in Tracktor, but you'll need to design your own Control Surface Setup to make it do what you want to do. This is not a complete tutorial on creating a setup in Traktor, but is designed to get you started with mapping the Morph to Traktor. (hint: use the Sensel Mapper software to mimic the MIDI output from another similar controller, then use that Setup.)\n\n\nDrawing and Painting\n\n\nMedia Editing\n\n\nGaming\n\n\nQWERTY\n\n\nInventing\n\n\nAPI\n\n\nThere's a software API for Python and C/C++. Find out more \nat our github", 
            "title": "Morph"
        }, 
        {
            "location": "/morph/#welcome", 
            "text": "This documentation explains the Sensel Morph hardware, features, software, and, most importantly, how to use it. These docs are maintained in its own  github repo . If you have a suggestion, correction, or improvement, you can clone this repo and  make a pull request  or  log an issue .", 
            "title": "Welcome"
        }, 
        {
            "location": "/morph/#overview-what-is-morph", 
            "text": "The Sensel Morph is a reconfigurable control surface for artists, musicians, coders, and creative people of all stripes. It can work using Bluetooth 4.0LE or USB connections.", 
            "title": "Overview - What is Morph?"
        }, 
        {
            "location": "/morph/#features", 
            "text": "Highly Sensitive :   Approx. 20,000 pressure sensors 5g - 5kg sensing range per touch (32,000 levels)   Extremely Fast :   Full Resolution Mode: 125 Hz (8 ms latency)  High Speed Mode: 500 Hz (2 ms latency)   Precise Tracking :   6502 dpi   Versatile Connectivity   Bluetooth LE, USB, Serial (enabled with Innovator's Kit)   On-the-Go Power   USB, Rechargeable Battery", 
            "title": "Features"
        }, 
        {
            "location": "/morph/#whats-in-the-box", 
            "text": "Morph  3ft. USB Micro Cable  Carrying case  Overlays 1  Quickstart guide  FCC and CE compliance statement   1  - Overlays received in your box depend on overlays ordered.", 
            "title": "What's in the box"
        }, 
        {
            "location": "/morph/#supported-operating-systems", 
            "text": "Operating system  USB MIDI  Bluetooth LE MIDI  SenselApp      OS X 10.10 +  Yes  Yes  Yes    macOS 10.12 +  Yes  Yes  Yes    Windows XP, 7, and 8  Yes  Yes  Yes    Windows 10 Anniversary Edition  Yes  Yes  Yes    Ubuntu/Debian-based Linux 1  Yes  Soon  No    Android  Yes  Yes 2  No    iOS  Yes  Yes  No     1  - Many linux distributions will support USB MIDI. Only distributions that use the  bluesz  stack will support BLE MIDI.  2  - Supported in Android Marshmallow and up", 
            "title": "Supported Operating systems"
        }, 
        {
            "location": "/morph/#quick-start", 
            "text": "This guide will get your Morph out of the box and working with your computer or mobile device.", 
            "title": "Quick Start"
        }, 
        {
            "location": "/morph/#1-download-software", 
            "text": "Download the SenselApp mapping and configuration application from  the Sensel website.  This is not only a great tool for getting the most out of your Morph, but essential for updating its firmware.", 
            "title": "1 Download Software"
        }, 
        {
            "location": "/morph/#2-usb-connection", 
            "text": "Remove the Morph and the supplied USB Micro cable from the box.  Connect the Morph to your Windows or MacOS computer with the USB cable.  The Morph will power up and automatically connect to your operating system.", 
            "title": "2 USB connection"
        }, 
        {
            "location": "/morph/#3-update-firmware", 
            "text": "Make sure you have a reliable internet connection and launch the Morph Dashboard on your computer with the Morph connected. The application will query our servers and find if there is a firmware update available. If there is, update your firmware and continue.", 
            "title": "3 Update Firmware"
        }, 
        {
            "location": "/morph/#4-launch-the-visualizer", 
            "text": "The Visualizer is the easiest way to see activity on your Morph and confirm the hardware is communicating with your computer.", 
            "title": "4 Launch the Visualizer"
        }, 
        {
            "location": "/morph/#bluetooth-connection", 
            "text": "The Sensel Morph is a Bluetooth 4.0 LE wireless device. This means it can function as a wireless controller for your music, drawing, or writing.\nThis section describes how to pair and un-pair your Morph to a bluetooth connection on a number of operating systems. Once the Morph is paired to your device, it will automatically connect when in range.", 
            "title": "Bluetooth connection"
        }, 
        {
            "location": "/morph/#pairing-mode", 
            "text": "In general, the process is as follows. Screen images for different operating systems are below.   Unplug the Morph from any USB computer connection (power connection is OK).  Open the bluetooth control panel for your computer.  Hold the button down for about four seconds, or until the LED turns blue.  Click the \"pair\" button in your computer's control panel.  The Morph will be paired to your device.", 
            "title": "Pairing mode"
        }, 
        {
            "location": "/morph/#unpairing", 
            "text": "If you want to pair the Morph to a different device, you'll need to unpair it from any current connection.\nThe best way to do this is to turn Bluetooth off on the device the Morph is currently connected to. Now, make sure Bluetooth is on for the different device, then go through the pairing process.", 
            "title": "Unpairing"
        }, 
        {
            "location": "/morph/#swap-pairing", 
            "text": "Now that the Morph has been paired to two different devices, it's very easy to swap connections.\nSimply double-click the button on the Morph and it disconnect from your current device, then will connect to the other device.  (TKTK -  there is still a bit of mystery here  )", 
            "title": "Swap Pairing"
        }, 
        {
            "location": "/morph/#os-specific-pairing-guides", 
            "text": "", 
            "title": "OS Specific Pairing Guides"
        }, 
        {
            "location": "/morph/#osx", 
            "text": "Open System Preferences and click the Bluetooth icon.\nPut the Morph into pairing mode. The control panel will look like:   Click the \"pair\" button on screen. Your Morph is now paired:", 
            "title": "OSX"
        }, 
        {
            "location": "/morph/#windows", 
            "text": "Open the Settings panel for Bluetooth. The easy to get there is to use the Windows search bar:", 
            "title": "Windows"
        }, 
        {
            "location": "/morph/#ios", 
            "text": "Open Settings and select Bluetooth. Put the Morph into pairing mode. Select Morph in the available devices and pair.   Once you have paired with the Morph, you will be able to use it with the different overlays. Here are some sample screen captures of how it shows up  in different apps:", 
            "title": "iOS"
        }, 
        {
            "location": "/morph/#android", 
            "text": "Put the Morph into pairing mode. In Android's Settings app, select Bluetooth, select \"Morph\" from the available devices and pair:   Once paired, you can use the Morph. If you are using the QWERTY overlay, you'll probably want to setup your keyboard so you can easily switch between on-screen and Morph. Use the keyboard icon on the bottom of your screen:", 
            "title": "Android"
        }, 
        {
            "location": "/morph/#linux", 
            "text": "There are many flavors of Linux. We are documenting one of the most common, Ubuntu 16.04. Open the Settings panel and select the Bluetooth panel   In the lower left of the \"Devices\" panel, click the \" + \" button to search and add the Morph.   Most Linux relies on the bluez bluetooth stack. You can also use the command line tools to pair. Once you run the  bluetoothctl devices  command, you'll be in the bluetoothclt interactive shell:   bluetoothctl devices\n[NEW] Controller 00:15:83:3D:0A:57 sensoruser [default]\n[NEW] Device 71:11:32:B0:12:A0 Morph-0194\n[bluetooth]# pair 71:11:32:B0:12:A0\n[bluetooth]# pair 71:11:32:B0:12:A0\n[bluetooth]# connect 71:11:32:B0:12:A0\n[bluetooth]# trust 71:11:32:B0:12:A0  If you want to disconnect, you can   bluetoothctl remove 71:11:32:B0:12:A0", 
            "title": "Linux"
        }, 
        {
            "location": "/morph/#update-bluesz", 
            "text": "If you want to update to the latest bluez software, you can get the link from the  bluez site . At the time of writing, the current version is 5.44. This has some support for Bluetooth MIDI:  sudo apt-get update\nsudo apt-get install -y libusb-dev libdbus-1-dev libglib2.0-dev libudev-dev libical-dev \ncd ~/Downloads\nwget http://www.kernel.org/pub/linux/bluetooth/bluez-5.44.tar.xz\ntar xvf bluez-5.44.tar.xz\ncd bluez-5.44\n./configure\nmake\nsudo make install  While we can't explicitly support all Linux, this should at least get you started.", 
            "title": "Update bluesz"
        }, 
        {
            "location": "/morph/#bluetooth-midi-configuration", 
            "text": "If your operating system supports MIDI over Bluetooth, you can have a wireless MIDI controller.", 
            "title": "Bluetooth MIDI configuration"
        }, 
        {
            "location": "/morph/#osx_1", 
            "text": "Open the AudioMIDI application in macOS. Open the MIDI Studio window (cmd-2) and double-click the Bluetooth logo. If you have successfully  paired the Morph with Bluetooth , you'll see your device listed here. Press \"connect\" and the Morph will be available to any MIDI applications as an input device.", 
            "title": "OSX"
        }, 
        {
            "location": "/morph/#windows_1", 
            "text": "Windows 10 Anniversary Edition and after support Bluetooth MIDI, so make sure you have the latest update. This support, however, is limited to applications that use the native windows API for MIDI (read more details  here ). As a result, for common use, you'll need a couple additional pieces of software:   MIDIberry  loopMIDI   The loopMIDI application creates virtual (or  loopback ) MIDI ports. MIDI berry provides a connection between the Morph's Bluetooth MIDI ports and the virtual MIDI ports. In your music application, you connect to the virtual port created in loopMIDI. Screenshot examples below show loopMIDI with the virtual port, MIDIberry with the connection made, and a couple of applications using the vitrual port to get MIDI input from the Morph.    virtual port \"MorphMIDI Port\" created in loopMIDI (type in the field, then click \"+\")    connection between Morph bluetooth and \"MorphMIDI Port\" made in MIDIberry (just tap on an input port and an output port to connect them)    virtual port \"MorphMIDI Port\" selected in the MIDI setup prefs of Bitwig Studio    virtual port \"MorphMIDI Port\" selected in the MIDI setup prefs of FL Studio", 
            "title": "Windows"
        }, 
        {
            "location": "/morph/#ios_1", 
            "text": "iOS version 8 and above support Bluetooth MIDI. These devices have Bluetooth LE support:   iPhone 4s +  iPad3 +  iPad Mini +   Once the Morph is paired with the iOS device, it's available as a MIDI device to most iOS MIDI-capable apps. You'll need to go into an app's preferences or setup panel to enable and configure MIDI control.   In some cases, you may need the  midimittr app  to create a connection with the Morph which will expose the Morph's MIDI input to other apps.", 
            "title": "iOS"
        }, 
        {
            "location": "/morph/#android_1", 
            "text": "Android version  Marshmallow (6) and above  support BLE MIDI. However, some devices support this connection type, and some don't. The best way to find out is to pair your device with the Morph via Bluetooth, then use the free  MIDI BLE Connect  app from the Google Play store. Open it after paring the Morph to your Android device. If there is a connection to be found, MIDI BLE Connect will scan and find it.  TKTK - I have yet to confirm MIDI BLE on Android. I know it's possible, just haven't seen it.", 
            "title": "Android"
        }, 
        {
            "location": "/morph/#linux_1", 
            "text": "BLE MIDI has some support in the latest  bluesz  stack, and should have more complete support in future updates according to  this blog . You are welcome to experiment! Instructions for updating to the most recently release of bluesz are  above .", 
            "title": "Linux"
        }, 
        {
            "location": "/morph/#hardware", 
            "text": "The Sensel Morph is a fairly simple piece of hardware. It consists of a flat rectangular area of force-sensing circuitry, a slightly raised area that contains additional processing circuitry, LEDs, a button, and micro USB connector.", 
            "title": "Hardware"
        }, 
        {
            "location": "/morph/#features_1", 
            "text": "", 
            "title": "Features"
        }, 
        {
            "location": "/morph/#leds", 
            "text": "", 
            "title": "LEDS"
        }, 
        {
            "location": "/morph/#strip", 
            "text": "There is a strip of 24 white LEDs. These light up when areas are pressed on the overlays, and can be controlled with the API.", 
            "title": "Strip"
        }, 
        {
            "location": "/morph/#status-rgb", 
            "text": "This LED can be different colors indicating different things. The different colors and blink patterns are:   White : Communication is happening to the device over USB  Blue stable : The device is in bluetooth mode  Blue pulsing : The device is in bluetooth pairing mode  Yellow : The device is in update mode (this means you should open the Sensel App and update the firmware on your device)  Purple : The device is communicating through the hacker cable (you won't see this unless you're using the hacker cable from the Innovator\u2019s Kit)  Red : Indicates a low battery or powering off device. To turn off the Morph, press and hold the power button for 5 seconds. After 2 seconds the red LED will turn on. Wait until the LED turns off before releasing the power button.", 
            "title": "Status RGB"
        }, 
        {
            "location": "/morph/#button", 
            "text": "Use to power device on/off and put in Bluetooth pairing mode.   Press to turn on  Hold for a few seconds to put in pairing mode (blue LED)  Hold for a few seconds to turn off (wait for red LED to go off)  Double click to disconnect from current device and put Morph in pairing mode", 
            "title": "Button"
        }, 
        {
            "location": "/morph/#usb-connector", 
            "text": "A single USB micro connector for charging the battery and providing a serial connection.", 
            "title": "USB Connector"
        }, 
        {
            "location": "/morph/#bluetooth-transmitter", 
            "text": "The Morph can seamlessly switch between Bluetooth and wired operation.  Read on  for details on connecting to your device with Bluetooth", 
            "title": "Bluetooth Transmitter"
        }, 
        {
            "location": "/morph/#force-sensor-surface", 
            "text": "Without an overlay, the Force Sensor Surface is mostly a black slab of nothing! However, you can get some life from it using the Visualizer in the SenselApp. It is no more or less durable than the rest of the case.", 
            "title": "Force Sensor Surface"
        }, 
        {
            "location": "/morph/#battery-life", 
            "text": "The Morph has a built-in rechargeable 3.7 Volt Lithium Polymer battery rated at 420 mAh amp-hours. Under normal usage, you can expect six to eight hours of use from a fully charged battery.", 
            "title": "Battery Life"
        }, 
        {
            "location": "/morph/#care-and-feeding", 
            "text": "The overlays are made of silicone rubber with a silicone top-coating for a smooth feel. You can clean them with warm water and soap. While we have tested a variety of substances to ensure quality, it is known that some sunscreens and lotions can be contaminants on plastics. So, to ensure longest life for your overlays, keep your hands clean. Additionally, silicone is susceptible to tears. Once torn, it's difficult to stop. Use the handy case we provide to keep your overlays away from loose change, hairpins, keys, or other sharp items!  The LiPo battery's charge is handled by the Morph's internal electronics. However, a general rule-of-thumb for LiPo batteries is that they should not be stored at full charge. If you will not be using the Morph for a while, turn it on and let it charge down.  The black surface of the pressure sensor is PET (Polyethylene Terephthalate) plastic. This is a common and strong plastic.", 
            "title": "Care and Feeding"
        }, 
        {
            "location": "/morph/#dimensions", 
            "text": "Thickness measurements are with the rubber feet. Subtract 0.75 mm for thickness measurements without feet.", 
            "title": "Dimensions"
        }, 
        {
            "location": "/morph/#morph-dashboard-software", 
            "text": "The Morph Dashboard is used to flash firmware, configure, calibrate, and confirm the functions of the Morph. You can download the software for Windows or macOS from the  Sensel website .  In order to use any of the features in the Morph Dashboard, you'll need to have a wired connection between your Morph and computer. A wireless connection is not sufficient for working with the Dashboard.", 
            "title": "Morph Dashboard Software"
        }, 
        {
            "location": "/morph/#home", 
            "text": "The home page of the Morph Dashboard allows you to select a task. You can edit the output of overlays, update firmware, and visualize the raw data from pressure input on the Morph.", 
            "title": "Home"
        }, 
        {
            "location": "/morph/#overlay-mapper", 
            "text": "", 
            "title": "Overlay Mapper"
        }, 
        {
            "location": "/morph/#music-overlays", 
            "text": "The Production, Drum, and Piano overlays can be completely modified from their default settings, so they work exactly the way you want. When you select a music overlay from the Dashboard, you'll open a screen where you can click on the different buttons or regions to modify the MIDI notes sent from the pads. Use the inspector's menu to select a different note value for each pad you want to change. You can save the settings to a map preset. When finished editing, be sure to click \"Send Map to Morph\" to modify the settings.", 
            "title": "Music Overlays"
        }, 
        {
            "location": "/morph/#qwerty-overlay", 
            "text": "In one way, the mapper for the QWERTY overlay is very similar to the music editors. However, instead of modifying MIDI notes, you are modifying the key event codes from each stroke. A list of keyboard codes can be found at  this link. \nMore importantly, the QWERTY Overlay mapper allows you to set the operating system preference, which impacts how the control, option, command, and function keys will behave on the overlay. Use the menu to set your preference and click \"Send to Morph\".", 
            "title": "QWERTY Overlay"
        }, 
        {
            "location": "/morph/#visualizer", 
            "text": "Use the Visualizer to view the raw pressure information coming from the Morph's sensor. The visualizer is more than entertaining, it's a look behind the scenes of what happens when you are using the Morph. You can see the effects of using different materials between a stylus (or some other actuator, like a finger) and pressure surface. You can also get a good impression of the dynamic range and sensitivity of the sensor. The curious and creative user will find great satisfaction in the Visualizer!", 
            "title": "Visualizer"
        }, 
        {
            "location": "/morph/#overlays", 
            "text": "", 
            "title": "Overlays"
        }, 
        {
            "location": "/morph/#qwerty", 
            "text": "THe QWERTY Overlay works like a regular QWERTY keyboard. It's a nice option for using the Morph as a keyboard for a tablet or remote computer. You will need to configure for your Operating System using the Morph Dashboard.", 
            "title": "QWERTY"
        }, 
        {
            "location": "/morph/#piano", 
            "text": "The Piano overlay sends MIDI data on Channel 1 from the Morph to your device so you can play software synths and samplers. By default, the Piano sends notes on MIDI channel 1 and the default octave starts at note 36 (C3). You can transpose up and down two octaves with the arrow keys. Additionally, you can create vibrato by moving your fingers side-to-side, bending the note.  The play, stop, and record buttons send MIDI Machine Control (MMC) commands to enable those features. Some software products, such as Ableton Live, do not recognize MMC, so they will seem to not work in those cases.", 
            "title": "Piano"
        }, 
        {
            "location": "/morph/#drums", 
            "text": "The Drum overlay sends notes on MIDI Channel 10. The Default notes start at 36 (C3). The arrow keys transpose all notes up or down 16 semitones to better work with many software drum machines, which work in banks of 16 notes.  The play, stop, and record buttons send MIDI Machine Control (MMC) commands to enable those features. Some software products, such as Ableton Live, do not recognize MMC, so they will seem to not work in those cases.", 
            "title": "Drums"
        }, 
        {
            "location": "/morph/#producer", 
            "text": "The 16 Pad grid sends on MIDI Channel 2, the controls send on MIDI Channel 2, the \"piano keys\" send on MIDI Channel 3.  The play, stop, and record buttons send MIDI Machine Control (MMC) commands to enable those features. Some software products, such as Ableton Live, do not recognize MMC, so they will seem to not work in those cases.", 
            "title": "Producer"
        }, 
        {
            "location": "/morph/#gaming", 
            "text": "The Gaming overlay is used for playing games.", 
            "title": "Gaming"
        }, 
        {
            "location": "/morph/#media", 
            "text": "The Media overlay is used for editing video and sound.", 
            "title": "Media"
        }, 
        {
            "location": "/morph/#art", 
            "text": "Use the Art overlay as a high-resolution drawing interface to capture the finest strokes with a variety of brushes and stylii.", 
            "title": "Art"
        }, 
        {
            "location": "/morph/#innovator", 
            "text": "Your turn to make an overlay! The Innovator kit works with the API.", 
            "title": "Innovator"
        }, 
        {
            "location": "/morph/#use-it", 
            "text": "As the name implies, there are a lot of different ways to use the high-resolution sensor that is the Morph. What follows in this section are the nuts and bolts on getting your morph working with your device and making use of the different overlays in different softwares.", 
            "title": "Use it!"
        }, 
        {
            "location": "/morph/#test-it", 
            "text": "Because the Morph is capable of so many different modes and protocols, you may need some reassurance and ways of testing. Here's some tools and suggestions for some of the different modes.", 
            "title": "Test it!"
        }, 
        {
            "location": "/morph/#midi", 
            "text": "If you are unsure that your Morph is properly connected and providing MIDI input to your computer, you can test with some simple programs. If you don't know what MIDI is, it's a simple serial protocol that electronic music hardware and software uses to interoperate. Learn more  at wikipedia .", 
            "title": "MIDI"
        }, 
        {
            "location": "/morph/#os-x", 
            "text": "MIDI Monitor", 
            "title": "OS X"
        }, 
        {
            "location": "/morph/#windows_2", 
            "text": "MIDIberry   Bluetooth MIDI is available on Windows 10 Anniversary Edition, so make sure your version of Windows 10 is recently updated. It is limited to apps that use the native Windows MIDI implementation, so it probably won't show up as a MIDI input in most software.  MIDIberry provides native MIDI hooks to Windows 10, so it can connect to the USB MIDI and the Bluetooth MIDI ports created by the Morph. MIDIberry provides a monitor function that makes it easy to confirm MIDI data input from the Morph.", 
            "title": "Windows"
        }, 
        {
            "location": "/morph/#ios_2", 
            "text": "MIDI Wrench", 
            "title": "iOS"
        }, 
        {
            "location": "/morph/#android_2", 
            "text": "USB MIDI Monitor", 
            "title": "Android"
        }, 
        {
            "location": "/morph/#linux_2", 
            "text": "amidi  others   If you want a GUI monitor, you can find something in the \"others\" link above. \nThe easiest way to test on Linux is to use ALSA's  amidi  in a terminal. Plug in the Morph to your computer's USB port, then list the MIDI devices with:   amidi -l  You'll get something like   Dir Device      Name\nIO  hw:1,0,0    Sensel Morph MIDI 1  Armed with the portname, you can now start dumping MIDI input to the terminal:  amidi -d -p hw:1,0,0", 
            "title": "Linux"
        }, 
        {
            "location": "/morph/#qwerty_1", 
            "text": "Open text editor or word processing program. Try typing. Use command and option keys. Everything work? If not, you'll need to either check your connection, or use the Morph Dashboard to make sure your QWERTY overlay is configured for your OS.", 
            "title": "QWERTY"
        }, 
        {
            "location": "/morph/#music-software-guides", 
            "text": "For the most part, when the Morph is used as a MIDI device, it shows up like any other MIDI keyboard or controller. However, there are some details worth documenting, since, with default mappings, each overlay sends on a different channel. Before you proceed make sure you have a wired or wireless connection between your device and the Morph.  The below screenshots show the Morph used as a Bluetooth MIDI device, but the general instructions do not change for the wired case or for different operating systems.", 
            "title": "Music Software Guides"
        }, 
        {
            "location": "/morph/#ableton-live", 
            "text": "Open the Preferences window in Ableton Live and select the MIDI tab. If you just want to play the keyboard and drums, turn \"Track\" on for the input port. If you want to use controls and buttons for parameters and switches in Live, turn \"Remote\" on for the input port. At this time, there is no MIDI control of the Morph, so there is no need to activate \"Track\" or \"Remote\" for output.  In Ableton Live, you can filter MIDI input on tracks according to Channel. You may want to do this to ensure different overlays are dedicated to different tracks.", 
            "title": "Ableton Live"
        }, 
        {
            "location": "/morph/#bitwig-studio", 
            "text": "Open the Preferences window in Bitwig Studio and select the Settings, then Controllers tabs. Select \"Generic\" (though the Morph is anything but generic!), then choose either \"MIDI Keyboard\" or \"Keyboard + 8 Device Knobs\".  The  MIDI Keyboard  option makes it easy to play notes in any of the instruments. If you want to map the extra CC controls of the Producer overlay to different parameters in Bitwig, you can use Bitwig's MIDI learn feature in the Mappings Browser Panel.  The  Keyboard + 8 Device Knobs  will make the Producer overlay nicer to work with. You can use the Morph Dashboard to remap the knobs to CC values 20-27, and Bitwig will automatically map the eight knobs to the currently selected Device Macros.  In this setup, both options have been added as Controllers, though only one is active.  Note that it is not possible to filter MIDI Channels in Bitwig tracks. If you want to do more advanced filtering and controls, you can use Bitwig's Controller Scripting API and create a control script.", 
            "title": "Bitwig Studio"
        }, 
        {
            "location": "/morph/#fl-studio", 
            "text": "FL Studio is Windows-only, with a macOS alpha in the works.   Open the MIDI Settings window from the Options menu.  Select the Morph in the input panel.   Click \"enable\" below the Input panel. Select a controller type \"(generic controller)\" from the menu.  This enables basic MIDI input for the Morph. You can get more info on using MIDI in FL Studio 12 from their documentation.", 
            "title": "FL Studio"
        }, 
        {
            "location": "/morph/#cycling-74-max", 
            "text": "Max will use any active MIDI device as an input. How you program your patch will affect what happens. The above screenshot illustrates the MIDI input selection menu that appears from double clicking on the MIDI input objects (midiin, ctlin, notein, pgmin, etc.).", 
            "title": "Cycling 74 Max"
        }, 
        {
            "location": "/morph/#apple-logic-pro-x-garage-band-and-main-stage", 
            "text": "With Apple music applications, \"it just works\" is the general idea. If it shows up in AudioMIDI Setup, it will provide input to recording-armed tracks to play software synths, samplers, and drums.  If you want to add more controls for effects and synths, you can use Logic's \"Learn Controls\" features.   You may need to edit some values in the Expert View, since sometimes Logic will guess incorrectly about the format of incoming data. The procedure is similar for Main Stage.  Garage Band offers no remote control of parameters from MIDI devices. You can only play instruments with note and pitchbend input.", 
            "title": "Apple Logic Pro X, Garage Band, and Main Stage"
        }, 
        {
            "location": "/morph/#presonus-studioone-2", 
            "text": "Open the Presonus preferences panel and select the  External Devices  tab. Press the  \"Add...\"  button to add a new MIDI controller.   In the resulting  Edit Device  panel, you can add \"Sensel\" to the Manufacturer field and \"Morph\" to \"Device Name\" field. Press the  All  button to receive MIDI on all channels. Select the Morph in the \"Receive From\" menu (there is no need to select the Morph in the Send To menu, since there is currently no MIDI control of the Morph).  Engage \"Split Channels\" if you would like to create a separate Instrument Track input for each MIDI channel from the Keyboard. You will probably want to enable Split Channels as pictured, since each overlay sends on a different MIDI channel.  You can choose to use this Keyboard as your \"Default Instrument Input\" by checking the appropriate box. If you are using only one Keyboard with Studio One, you should check this box.", 
            "title": "Presonus StudioOne 2"
        }, 
        {
            "location": "/morph/#propellerheads-reason", 
            "text": "Reason has several ways of using a MIDI keyboard or controller. The most basic is to just add the Morph as a keyboard.   Open Reason's Preferences panel, and select the  Control Surfaces  tab. Click the  Add  button, and select the \" \" from the  Manufacturer  menu and \"MIDI Control Keyboard\" from the  Model  menu. You can type \"Sensel Morph\" into the  Name  field. Finally, select the Morph from the  MIDI Input  menu.   After you have set that up, you can make a more sophisticated setup to filter channels   Select the \"Sync\" tab and add the Sensel Morph to at least one of the External Control Buses, as pictured above.   Now you can use the Hardware device in the Reason Rack and click the  ADVANCED MIDI  button to expose the selectors. It is here that you can map MIDI channels (and thereby different overlays) from the Morph to different devcies in your rack.", 
            "title": "Propellerheads Reason"
        }, 
        {
            "location": "/morph/#other-programs", 
            "text": "These programs are worth investigating, since they are popular.", 
            "title": "Other Programs"
        }, 
        {
            "location": "/morph/#ardour-linux", 
            "text": "", 
            "title": "Ardour (linux)"
        }, 
        {
            "location": "/morph/#hydrogen-linux", 
            "text": "", 
            "title": "Hydrogen (linux)"
        }, 
        {
            "location": "/morph/#reaper", 
            "text": "", 
            "title": "Reaper"
        }, 
        {
            "location": "/morph/#protools", 
            "text": "", 
            "title": "ProTools"
        }, 
        {
            "location": "/morph/#kontakt", 
            "text": "", 
            "title": "Kontakt"
        }, 
        {
            "location": "/morph/#massive", 
            "text": "", 
            "title": "Massive"
        }, 
        {
            "location": "/morph/#maschine", 
            "text": "Although Maschine comes with its own hardware for sequencing and playing drums, you may want to use the highly-sensitive and playable surface of the Morph to play the extensive soundbanks and effects in the Maschine software.", 
            "title": "Maschine"
        }, 
        {
            "location": "/morph/#standalone", 
            "text": "", 
            "title": "Standalone"
        }, 
        {
            "location": "/morph/#vst", 
            "text": "", 
            "title": "VST"
        }, 
        {
            "location": "/morph/#traktor", 
            "text": "You can use the reliable Morph to trigger samples and control effects in Tracktor, but you'll need to design your own Control Surface Setup to make it do what you want to do. This is not a complete tutorial on creating a setup in Traktor, but is designed to get you started with mapping the Morph to Traktor. (hint: use the Sensel Mapper software to mimic the MIDI output from another similar controller, then use that Setup.)", 
            "title": "Traktor"
        }, 
        {
            "location": "/morph/#drawing-and-painting", 
            "text": "", 
            "title": "Drawing and Painting"
        }, 
        {
            "location": "/morph/#media-editing", 
            "text": "", 
            "title": "Media Editing"
        }, 
        {
            "location": "/morph/#gaming_1", 
            "text": "", 
            "title": "Gaming"
        }, 
        {
            "location": "/morph/#qwerty_2", 
            "text": "", 
            "title": "QWERTY"
        }, 
        {
            "location": "/morph/#inventing", 
            "text": "", 
            "title": "Inventing"
        }, 
        {
            "location": "/morph/#api", 
            "text": "There's a software API for Python and C/C++. Find out more  at our github", 
            "title": "API"
        }, 
        {
            "location": "/morph_api/", 
            "text": "Morph API\n\n\nThis is a placeholder page\n\n\nSubject 1\n\n\nLearn more:\n\n\n\n\nthings\n\n\nstuff\n\n\nand more!\n\n\n\n\nSubject 2\n\n\nType the code in your terminal:\n\n\ndef everything:\n\n\n\n\nvoid everything()\n\n\n\n\nto ensure panic. Don't tell me you don't have a backup?", 
            "title": "Morph API"
        }, 
        {
            "location": "/morph_api/#morph-api", 
            "text": "This is a placeholder page", 
            "title": "Morph API"
        }, 
        {
            "location": "/morph_api/#subject-1", 
            "text": "Learn more:   things  stuff  and more!", 
            "title": "Subject 1"
        }, 
        {
            "location": "/morph_api/#subject-2", 
            "text": "Type the code in your terminal:  def everything:  void everything()  to ensure panic. Don't tell me you don't have a backup?", 
            "title": "Subject 2"
        }
    ]
}